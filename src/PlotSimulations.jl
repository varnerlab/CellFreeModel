include("DataFile.jl")
include("Solve.jl")
using PyPlot

num_dir = 0
if isfile("./rate_vector/num_dir")
    num_dir = convert(Int64,readcsv("./rate_vector/num_dir")[1])
end
num_dir += 1
mkdir("./rate_vector/$num_dir")
writecsv("./rate_vector/num_dir",num_dir)

# Setup the timescale -
TSTART = 0.0;
TSTOP = 3.0;
Ts = 0.001;

#control_constant_array_best = readdlm(control_constant_array_best.dat)
#initial_condition_best = readdlm(initial_condition_best.dat)
#rate_constant_best = readdlm(rate_constant_best.dat)
#saturation_constant_array_best = readdlm(saturation_constant_array_best.dat)

Tsim,X = Solve(TSTART,TSTOP,Ts)

# Load the data_dictionary -
data_dictionary = DataFile(TSTART,TSTOP,Ts);

#figure(figsize=(5.5,3.4))
#suptitle("M_oaa_c")
#plot(Tsim,X[:,9])
#figure(figsize=(5.5,3.4))
#suptitle("M_coa_c")
#plot(Tsim,X[:,10])
#figure(figsize=(5.5,3.4))
#suptitle("M_accoa_c")
#plot(Tsim,X[:,11])
#figure(figsize=(5.5,3.4))
#suptitle("M_akg_c")
#plot(Tsim,X[:,22])
#figure(figsize=(5.5,3.4))
#suptitle("M_succoa_c")
#plot(Tsim,X[:,23])
#figure(figsize=(5.5,3.4))
#suptitle("M_pep_c")
#plot(Tsim,X[:,48])
#figure(figsize=(5.5,3.4))
#suptitle("E_R_ldh_f")
#plot(Tsim,X[:,164])
#figure(figsize=(5.5,3.4))
#suptitle("E_R_ldh_r")
#plot(Tsim,X[:,165])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_PTS")
#plot(Tsim,X[:,97])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_pck")
#plot(Tsim,X[:,119])
#figure(figsize=(5.7,3.5))
#suptitle("h2o")
#plot(Tsim,X[:,92])
#figure(figsize=(5.7,3.5))
#suptitle("atp")
#plot(Tsim,X[:,53])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_eno")
#plot(Tsim,X[:,116])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_sucCD_R")
#plot(Tsim,X[:,146])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_pdh")
#plot(Tsim,X[:,121])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_pps")
#plot(Tsim,X[:,122])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_pflAB")
#plot(Tsim,X[:,166])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_alaAC")
#plot(Tsim,X[:,195])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_ile")
#plot(Tsim,X[:,206])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_leu")
#plot(Tsim,X[:,207])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_lys")
#plot(Tsim,X[:,208])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_val")
#plot(Tsim,X[:,216])
#figure(figsize=(5.5,3.4))
#suptitle("M_utp_c")
#plot(Tsim,X[:,59])
#figure(figsize=(5.5,3.4))
#suptitle("E_R_glk_atp")
#plot(Tsim,X[:,98])
#figure(figsize=(5.5,3.4))
#suptitle("E_R_glk_utp")
#plot(Tsim,X[:,99])
#figure(figsize=(5.5,3.4))
#suptitle("E_R_glk_ctp")
#plot(Tsim,X[:,100])
#figure(figsize=(5.5,3.4))
#suptitle("E_R_glk_gtp")
#plot(Tsim,X[:,101])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_CAT")
#plot(Tsim,X[:,222])
figure(figsize=(5.7,3.5))
suptitle("M_h_c")
plot(Tsim,X[:,91])
#figure(figsize=(5.7,3.5))
#suptitle("M_pi_c")
#plot(Tsim,X[:,88])
#figure(figsize=(5.7,3.5))
#suptitle("M_ppi_c")
#plot(Tsim,X[:,31])
#figure(figsize=(5.7,3.5))
#suptitle("M_nad_c")
#plot(Tsim,X[:,93])
#figure(figsize=(5.7,3.5))
#suptitle("M_nadh_c")
#plot(Tsim,X[:,94])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_pgk")
#plot(Tsim,X[:,112])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_pyk")
#plot(Tsim,X[:,118])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_sucCD_R")
#plot(Tsim,X[:,146])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_ackA")
#plot(Tsim,X[:,159])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_atp")
#plot(Tsim,X[:,169])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_adk_R")
#plot(Tsim,X[:,188])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_amp_ppi")
#plot(Tsim,X[:,223])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_amp_pi")
#plot(Tsim,X[:,224])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_gmp_ppi")
#plot(Tsim,X[:,225])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_gmp_pi")
#plot(Tsim,X[:,226])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_cmp_ppi")
#plot(Tsim,X[:,227])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_cmp_pi")
#plot(Tsim,X[:,228])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_ump_ppi")
#plot(Tsim,X[:,229])
#figure(figsize=(5.7,3.5))
#suptitle("E_R_ump_pi")
#plot(Tsim,X[:,230])

experimental_data_dictionary = data_dictionary["EXPERIMENT_DATA_DICTIONARY"];
for (key,experiment::Experiment) in experimental_data_dictionary
  model_index = experiment.model_index;
  data = experiment.raw_measurement_array;
#  if key=="CAT"||key=="M_ala_L_c"||key=="M_asn_L_c"||key=="M_arg_L_c"||key=="M_asp_L_c"||key=="M_glu_L_c"||key=="M_gln_L_c"||key=="M_gly_L_c"||key=="M_his_L_c"||key=="M_ile_L_c"||key=="M_leu_L_c"||key=="M_lys_L_c"||key=="M_met_L_c"||key=="M_phe_L_c"||key=="M_pro_L_c"||key=="M_ser_L_c"||key=="M_thr_L_c"||key=="M_trp_L_c"||key=="M_tyr_L_c"||key=="M_val_L_c"||key=="M_atp_c"||key=="M_gtp_c"
  if key=="M_atp_c"||key=="M_adp_c"||key=="M_amp_c"||key=="M_gtp_c"||key=="M_gdp_c"||key=="M_gmp_c"||key=="M_ctp_c"||key=="M_cdp_c"||key=="M_cmp_c"||key=="M_utp_c"||key=="M_udp_c"||key=="M_ump_c"||key=="M_glc_D_c"
  # make plot -
  figure(figsize=(5.5,3.4))
  suptitle(key)
  plot(Tsim,X[:,model_index]);
  plot(data[:,1],data[:,2],"ro");
  end
end

